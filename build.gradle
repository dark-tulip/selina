plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.1'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'org.liquibase.gradle' version '2.2.0'
	id 'io.qameta.allure' version '2.11.2'
}

ext {
	allureVersion = '2.21.0'
	junitVersion = '5.7.1'
}

sourceCompatibility = '11'
targetCompatibility = '11'

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

repositories {
	jcenter()
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.postgresql:postgresql:42.5.4'
	implementation 'org.liquibase:liquibase-core:4.20.0'
	implementation 'io.qameta.allure:allure-java-commons:2.21.0'

	implementation 'org.springframework.boot:spring-boot-starter-test'
	implementation("org.junit.jupiter:junit-jupiter-params:${junitVersion}")
	implementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testImplementation 'org.projectlombok:lombok:1.18.22'
    runtimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
	runtimeOnly 'org.liquibase:liquibase-core:4.20.0'

	compileOnly 'org.projectlombok:lombok:1.18.26'
	annotationProcessor 'org.projectlombok:lombok:1.18.26'

	testImplementation('com.codeborne:selenide:6.6.5')
	testImplementation("io.qameta.allure:allure-selenide:${allureVersion}")
	testImplementation('org.slf4j:slf4j-simple:2.0.5')
	testImplementation("org.junit.jupiter:junit-jupiter-params:${junitVersion}")
	testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
	testImplementation 'org.springframework:spring-test:5.3.5'
	implementation 'org.apache.httpcomponents:httpclient:4.5.14'
	implementation 'commons-httpclient:commons-httpclient:3.1'
	implementation 'org.python:jython:2.7.3'
	implementation 'org.python:jython-standalone:2.7.3'
	implementation 'org.python:jython-installer:2.7.3'

//	testImplementation 'org.objectweb.proactive:programming-extension-processbuilder:13.0.2'

}


test {
	useJUnitPlatform()
}

allure {
	autoconfigure = true
	version = "${allureVersion}"

	useJUnit5 {
		version = "${allureVersion}"
	}
}
